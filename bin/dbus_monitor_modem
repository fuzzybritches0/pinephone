#!/bin/bash

return_1() {
	echo ${1}
}

countdown() {
	sleep 1s
	((count++))
	if ((count > 60)); then
		echo "ERROR: ${1}"
		echo "giving up!"
		exit 1
	fi
}

at_exit() {
	for pid in $(pidof dbus-monitor); do
		[ "$(cat /proc/${pid}/cmdline | tr "\0" " " |\
			grep -a /org/freedesktop/ModemManager1/Modem/)" ] &&\
			kill ${pid}
	done
	exit 0
}

save_message() {
	brightnessctl -q -d green:indicator set 1
	count=0
	timestampP=10
	text_end=0
	mmcli -m any --sms ${1} | while read line; do
	echo "MESSAGE: ${line}" >> ~/dbus_monitor_modem.log
		[ "${count}" -eq "3" ] && number="${line:24}" && mkdir -p "${smsdir}/${number}"
		[ "${count}" -eq "4" ] && echo "${line:13}" > "${smsdir}/${number}/tmpfile"
		if [ "${count}" -gt "4" ]; then
			if [ "${line}" == "-----------------------" ]; then
				text_end=1
			else
				if [ "${text_end}" -eq "0" ]; then
					echo "${line:13}" >> "${smsdir}/${number}/tmpfile"
					(( timestampP++ ))
				fi
			fi
		fi
		if [ "${count}" -eq "${timestampP}" ]; then
			timestamp="${line:13}r"
			mv "${smsdir}/${number}/tmpfile" "${smsdir}/${number}/${timestamp}"
			ln -sf ${smsdir}/${number}/${timestamp} ${smsdir}/new/${timestamp}_${number}
		fi
		(( count++ ))
	done
}

process_message() {
	mmcli -m any --messaging-list-sms | while read line; do
		if [ "${line}" != "No sms messages were found" ]; then
			if [ "${line/received}" != "${line}" ]; then
				ring_message &
				save_message $(return_1 ${line})
				mmcli -m any --messaging-delete-sms=$(return_1 ${line})
			fi
		fi
	done
}


process_voice() {
       mmcli -m any --voice-list-calls | while read call; do
		if [ "${call}" != "No calls were found" ]; then
			incoming=$( return_1 $(echo ${call} | grep 'incoming (ringing-in)') )
			if [ "${incoming}" ]; then
				brightnessctl -q -d green:indicator set 1
				foot -- voice handle ${incoming} incoming
			fi
		fi
	done
}

trap at_exit EXIT SIGINT

smsdir="${HOME}/SMS"
[ ! -d "${smsdir}/new" ] && mkdir -p "${smsdir}/new"

messaging="interface=org.freedesktop.ModemManager1.Modem.Messaging"
voice="interface=org.freedesktop.ModemManager1.Modem.Voice"

while [ ! "$(find_modem)" ]; do
	countdown "no modem found!"
done

dbus-monitor --system path=$(find_modem) | while read line; do
	echo "MONITOR: ${line}" >> ~/dbus_monitor_modem.log
	if [ "$(echo ${line} | grep "${messaging}")" ]; then
		process_message &
	elif [ "$(echo ${line} | grep "${voice}")" ]; then
		process_voice &
	fi
done
