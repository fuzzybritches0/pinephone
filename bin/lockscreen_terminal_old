#!/bin/bash
#
#  based on a programme (shpaint.sh) by author: Martin "BruXy" Bruchanov, bruxy at regnet.cz
#

##################
# Initialization #
##################

_STTY=$(stty -g)    # Save current terminal setup
printf   "\e[2J"    # clear screen, set cursor at beginning
stty -echo -icanon  # Turn off line buffering
printf "\e[?9h"     # Enable terminal mouse reading
printf "\e[?25l"    # Turn of cursor 
printf "\e]0;LockScreen\007"


# Defaults
X=0 
Y=0
PIN=1234
passphrase=
hidden=

#############
# Functions #
#############

info_display() {
	set_pos 18 5; echo -n $(date '+%H:%M, %a, %d %b')
	set_pos 19 6; status_modem
	set_pos 12 7; echo "No new messages/No missed calls"
	sleep 3s
	set_pos 18 5; echo "                                    "
	set_pos 19 6; echo "                                    "
	set_pos 12 7; echo "                                    "
}

function at_exit() {
	printf "\e[?9l"          # Turn off mouse reading
	printf "\e[?12l\e[?25h"  # Turn on cursor
	stty "$_STTY"            # restore terminal settings
	clear
	[ "${1}" ] && exit ${1}
	exit
}

# X = $1, Y = $2
function set_pos() {
 	echo -en  "\e[${2};${1}f"
}

wrong() {
	set_pos 12 23; echo "PASSPHRASE: W R O N G !     "
	sleep 3s
	set_pos 12 23; echo "PASSPHRASE:                 "
}

function show_res() {
	set_pos 12 23; echo "PASSPHRASE:                 "
	if [ "${1}${2}" == "15" ]; then
		at_exit 5
	elif [ "${1}${2}" == "24" ]; then
		passlen=${#passphrase}
		(( passlen = passlen - 1 ))
		[ "${passlen}" -lt "0" ] && passlen=0
		passphrase=${passphrase:0:${passlen}}
		hidden=${hidden:0:${passlen}}
	elif [ "${1}${2}" == "34" ]; then
		[ "${passphrase}" == "${PIN}" ] && at_exit 0
		[ "${passphrase}" != "${PIN}" ] && wrong && passphrase= && hidden=
	elif [ "${#passphrase}" -lt "16" ]; then
		[ "${1}${2}" == "11" ] && passphrase="${passphrase}1" && hidden="${hidden}*"
		[ "${1}${2}" == "21" ] && passphrase="${passphrase}2" && hidden="${hidden}*"
		[ "${1}${2}" == "31" ] && passphrase="${passphrase}3" && hidden="${hidden}*"
		[ "${1}${2}" == "12" ] && passphrase="${passphrase}4" && hidden="${hidden}*"
		[ "${1}${2}" == "22" ] && passphrase="${passphrase}5" && hidden="${hidden}*"
		[ "${1}${2}" == "32" ] && passphrase="${passphrase}6" && hidden="${hidden}*"
		[ "${1}${2}" == "13" ] && passphrase="${passphrase}7" && hidden="${hidden}*"
		[ "${1}${2}" == "23" ] && passphrase="${passphrase}8" && hidden="${hidden}*"
		[ "${1}${2}" == "33" ] && passphrase="${passphrase}9" && hidden="${hidden}*"
		[ "${1}${2}" == "14" ] && passphrase="${passphrase}0" && hidden="${hidden}*"
		[ "${passphrase}" == "${PIN}" ] && at_exit 0
	fi
	set_pos 12 23; echo "PASSPHRASE: ${hidden}"
}

row() {
	if [ "${X}" -ge "9" ] && [ "${X}" -le "19" ]; then
		show_res 1 ${1}
	elif [ "${X}" -ge "21" ] && [ "${X}" -le "31" ]; then
		show_res 2 ${1}
	elif [ "${X}" -ge "33" ] && [ "${X}" -le "43" ]; then
		show_res 3 ${1}
	fi
}

function process_click() {
	if [ "${Y}" -ge "26" ] && [ "${Y}" -le "28" ]; then
		row 1
	
	elif [ "${Y}" -ge "30" ] && [ "${Y}" -le "32" ]; then
		row 2
	
	elif [ "${Y}" -ge "34" ] && [ "${Y}" -le "36" ]; then
		row 3
	
	elif [ "${Y}" -ge "38" ] && [ "${Y}" -le "40" ]; then
		row 4
	
	elif [ "${Y}" -ge "43" ] && [ "${Y}" -le "45" ]; then
		row 5
	elif [ "${Y}" -lt "10" ]; then
		info_display &
	fi
}

function draw_keys() {
	set_pos 12 23; echo "PASSPHRASE:                 "
	set_pos 8 25; echo "┌───────────┬───────────┬───────────┐"
	set_pos 8 26; echo "│           │           │           │"
	set_pos 8 27; echo "│     1     │     2     │     3     │"
	set_pos 8 28; echo "│           │           │           │"
	set_pos 8 29; echo "├───────────┼───────────┼───────────┤"
	set_pos 8 30; echo "│           │           │           │"
	set_pos 8 31; echo "│     4     │     5     │     6     │"
	set_pos 8 32; echo "│           │           │           │"
	set_pos 8 33; echo "├───────────┼───────────┼───────────┤"
	set_pos 8 34; echo "│           │           │           │"
	set_pos 8 35; echo "│     7     │     8     │     9     │"
	set_pos 8 36; echo "│           │           │           │"
	set_pos 8 37; echo "├───────────┼───────────┼───────────┤"
	set_pos 8 38; echo "│           │           │           │"
	set_pos 8 39; echo "│     0     │    DEL    │    OK     │"
	set_pos 8 40; echo "│           │           │           │"
	set_pos 8 41; echo "└───────────┴───────────┴───────────┘"
	set_pos 8 42; echo "┌───────────┐"
	set_pos 8 43; echo "│           │"
	set_pos 8 44; echo "│ EMERGENCY │"
	set_pos 8 45; echo "│   CALL    │"
	set_pos 8 46; echo "└───────────┘"
}

##########
#  MAIN  #
##########
trap 'echo -n' EXIT SIGINT
draw_keys
while :; do 
	read -N 6 click
	mouse=( `echo -en ${click#???} | hexdump -v  -e'1/1 " %u"'` )
	X=$[ ${mouse[0]} - 32]	Y=$[ ${mouse[1]} - 32]
	process_click
done

